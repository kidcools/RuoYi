<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.CustomerMapper">
    
    <resultMap type="Customer" id="CustomerResult">
        <result property="id"    column="id"    />
        <result property="name"    column="name"    />
        <result property="opposite"    column="opposite"    />
        <result property="username"    column="username"    />
        <result property="password"    column="password"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateTime"    column="update_time"    />
        <result property="expireTime"    column="expire_time"    />
    </resultMap>

    <sql id="selectCustomerVo">
        select id, name, opposite, username, password, create_time, update_time, expire_time from customer
    </sql>

    <select id="selectCustomerList" parameterType="Customer" resultMap="CustomerResult">
        <include refid="selectCustomerVo"/>
        <where>  
            <if test="name != null  and name != ''"> and name like concat('%', #{name}, '%')</if>
            <if test="opposite != null  and opposite != ''"> and opposite = #{opposite}</if>
            <if test="username != null  and username != ''"> and username like concat('%', #{username}, '%')</if>
            <if test="password != null  and password != ''"> and password = #{password}</if>
            <if test="expireTime != null "> and expire_time = #{expireTime}</if>
        </where>
    </select>
    
    <select id="selectCustomerById" parameterType="Long" resultMap="CustomerResult">
        <include refid="selectCustomerVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertCustomer" parameterType="Customer">
        insert into customer
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="id != null">id,</if>
            <if test="name != null and name != ''">name,</if>
            <if test="opposite != null and opposite != ''">opposite,</if>
            <if test="username != null">username,</if>
            <if test="password != null">password,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateTime != null">update_time,</if>
            <if test="expireTime != null">expire_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="id != null">#{id},</if>
            <if test="name != null and name != ''">#{name},</if>
            <if test="opposite != null and opposite != ''">#{opposite},</if>
            <if test="username != null">#{username},</if>
            <if test="password != null">#{password},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateTime != null">#{updateTime},</if>
            <if test="expireTime != null">#{expireTime},</if>
         </trim>
    </insert>

    <update id="updateCustomer" parameterType="Customer">
        update customer
        <trim prefix="SET" suffixOverrides=",">
            <if test="name != null and name != ''">name = #{name},</if>
            <if test="opposite != null and opposite != ''">opposite = #{opposite},</if>
            <if test="username != null">username = #{username},</if>
            <if test="password != null">password = #{password},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
            <if test="expireTime != null">expire_time = #{expireTime},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteCustomerById" parameterType="Long">
        delete from customer where id = #{id}
    </delete>

    <delete id="deleteCustomerByIds" parameterType="String">
        delete from customer where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>